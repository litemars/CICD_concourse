/*
 * This file was automatically generated by EvoSuite
 * Mon Jun 26 10:20:01 GMT 2017
 */

package org.magee.math;

import static org.junit.Assert.*;
import org.junit.Test;
import org.magee.math.Rational;

public class Rational_ESTest {

  //Test case number: 0
  @Test
  public void test0()  throws Throwable  {
      Rational rational0 = new Rational(16L, 16L);
      Rational rational1 = rational0.abs();
      rational1.numerator = 1695L;
      rational0.denominator = 1695L;
      assertEquals(0.009439528F, rational0.floatValue(), 0.01F);
      assertEquals(0.00943952802359882, rational0.doubleValue(), 0.01D);
  }

  //Test case number: 1
  @Test
  public void test1()  throws Throwable  {
      Rational rational0 = new Rational((-2660L), 2393L);
      Rational rational1 = rational0.abs();
      assertEquals((-2660L), rational0.numerator);
      assertEquals(1.1115755F, rational1.floatValue(), 0.01F);
      assertEquals(1.111575428332637, rational1.doubleValue(), 0.01D);
  }

  //Test case number: 2
  @Test
  public void test2()  throws Throwable  {
      Rational rational0 = new Rational(2899L, 925L);
      Rational rational1 = rational0.reduce();
      rational0.pow(8);
      rational0.reduce();
      Rational rational2 = rational0.inverse();
      Rational rational3 = rational0.subtract(rational1);
      Rational rational4 = rational3.multiply(rational0);
      rational3.shortValue();
      Rational rational5 = rational4.divide(rational0);
      rational1.add(rational2);
      // Undeclared exception!
      try {
        rational5.pow(65);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 3
  @Test
  public void test3()  throws Throwable  {
      long long0 = 0L;
      Rational rational0 = new Rational(2653L, 2653L);
      Rational rational1 = rational0.abs();
      rational0.divide(rational1);
      Rational rational2 = rational0.abs();
      Rational rational3 = rational2.multiply(rational0);
      Rational rational4 = rational3.inverse();
      Rational rational5 = rational4.subtract(rational3);
      // Undeclared exception!
      try {
        rational5.add(rational3);
        fail("Expecting exception: TooManyResourcesException");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 100000
         //
      }
  }

  //Test case number: 4
  @Test
  public void test4()  throws Throwable  {
      Rational rational0 = new Rational(5180L, 5180L);
      long long0 = rational0.longValue();
      assertEquals(1L, long0);
      
      Rational rational1 = rational0.divide(5180L);
      assertEquals(1.9305019E-4F, rational1.floatValue(), 0.01F);
      assertEquals(26832400L, rational1.denominator);
      assertEquals(1.9305019305019305E-4, rational1.doubleValue(), 0.01D);
      assertEquals(0L, rational1.longValue());
      
      Rational rational2 = rational0.subtract(rational0);
      assertEquals(26832400L, rational2.denominator);
      assertEquals(0.0, rational2.doubleValue(), 0.01D);
      assertEquals(0.0F, rational2.floatValue(), 0.01F);
      assertEquals(0L, rational2.longValue());
  }

  //Test case number: 5
  @Test
  public void test5()  throws Throwable  {
      long long0 = (-1L);
      long long1 = (-2665L);
      Rational rational0 = new Rational((-1L), (-2665L));
      Rational rational1 = rational0.divide((-2665L));
      rational0.divide(rational1);
      long long2 = rational0.denominator;
      Rational rational2 = rational0.reduce();
      rational0.byteValue();
      Rational rational3 = rational0.inverse();
      rational0.subtract(rational3);
      Rational rational4 = new Rational(3924L, (-3343L));
      // Undeclared exception!
      try {
        rational2.multiply(0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
      }
  }

  
}
